{% extends 'base.html.twig' %}


{% block title %}Liste du matériel
{% endblock %}


{% block body %}
	<div class="flex-grow-1 px-4">
	
		<h1 class="text-center my-5">Stock de materiel</h1>
		<table style="width: 100%" id="material-list" class="table table-hover table-striped nowrap">
			<thead>
				<tr>
					<th class="text-center" scope="col">id</th>
					<th class="text-center" scope="col">Nom</th>
					<th class="text-center" scope="col">Date de création</th>
					<th class="text-center" scope="col">Prix HT</th>
					<th class="text-center" scope="col">TVA</th>
					<th class="text-center" scope="col">Prix TTC</th>
					<th class="text-center" scope="col">Quantité</th>
					<th class="text-center" scope="col">Décrémenter</th>
				</tr>
			</thead>
			<tfooter>
				<tr>
					<th class="text-center" scope="col">id</th>
					<th class="text-center" scope="col">Nom</th>
					<th class="text-center" scope="col">Date de création</th>
					<th class="text-center" scope="col">Prix HT</th>
					<th class="text-center" scope="col">TVA</th>
					<th class="text-center" scope="col">Prix TTC</th>
					<th class="text-center" scope="col">Quantité</th>
					<th class="text-center" scope="col"></th>
				</tr>
			</tfooter>
		</table>
	</div>
{% endblock %}

{% block customscript %}
	<script>
 let url_path = "{{ url('app_material_index') }}"
			$(document).ready(function () {
			var datatable = $("#material-list").DataTable({
				ajax: url_path,
				language: {
				"info": "Affichage de _START_ à  _END_ sur _TOTAL_ entrées",
    			"infoEmpty": "Affichage de 0 à 0 sur 0 entrées",
    			"infoFiltered": "(filtrées depuis un total de _MAX_ entrées)",
   				"lengthMenu": "Afficher _MENU_ entrées",
    			"paginate": {
        			"first": "Première",
        			"last": "Dernière",
        			"next": "Suivante",
        			"previous": "Précédente"
    			},
    			"zeroRecords": "",
				"search": "Recherche",
				},
				processing: true,
				serverSide: true,
				//info: false,
				pageLength: 5,
				paging: true,
				lengthMenu: [5, 10, 15, 20, { label: "All", value: -1 }],
				select: true,
				responsive: {
				details: {
					display: DataTable.Responsive.display.modal({
					header: function (row, type, val, meta) {
						var data = row.data();
						return "Details pour " + data["name"];
					},
					}),
					renderer: DataTable.Responsive.renderer.tableAll({
					tableClass: "table",
					}),
				},
				},
				layout: {
					top2Start: {
						buttons: [
						{	
							text : 'Ajouter',
							className : 'update', 
							action: function () {
								window.location ='/material/new/';
							},
						},
						{	
							extend: 'selected',
							text : 'Modifier',
							className : 'update', 
							action: function (e, dt, button, config) {
								
								var data = dt.row({ selected: true }).data();
								var id = data["id"];
								
								window.location ='/material/update/' + id ;
							},
						},
						{
							extend: 'selected',
							text : 'Détails',
							className : 'details', 
                    		action: function (e, dt, button, config) {
								var data = dt.row({ selected: true }).data();
								let created_at = new Date(data["createdAt"]);
								var date = formatDate(created_at);
								
                        	//e.stopPropagation();
                        	this.popover(' <div class="row"><div class="col-md-10"><p class="ms-3">Quantité <span class="badge bg-secondary">'+ data["quantity"]+'</span></p><ul class="list-group list-group-horizontal-lg my-2 ms-2 w-100"><li class="list-group-item list-group-item-light ms-2 w-50 align-items-center">Prix HT</li><li class="list-group-item w-50 align-items-center">'+ data["priceBeforeTax"]+'€</li></ul><ul class="list-group list-group-horizontal-lg my-2 ms-2 w-100 "><li class="list-group-item list-group-item-light ms-2 w-50 align-items-center">TVA</li><li class="list-group-item w-50 align-items-center">'+  (data.VAT.value)*100+'%</li></ul><ul class="list-group list-group-horizontal-lg my-2 ms-2 w-100"><li class="list-group-item list-group-item-light ms-2 w-50 align-items-center">Prix TTC</li><li class="list-group-item w-50 align-items-center">'+ data["priceIncVAT"]+'€</li></ul> <p class="ms-3">Date de création : '+ date +'</p></div></div>', {
							popoverTitle: '<p class="lead align-self-end justify-content-end ">Infos produit </p>',
                        });
                    }
                },
						
						],
					},
					top2End: {
						buttons: ["pdfHtml5"],
					},
				},
				
				// buttons : true,
				
				columnDefs: [
				{
					target: '_all', 
					className: 'dt-center'
				},
				{
					target: [0], 
					 visible: false,
				},
				{
					target: [0, 2, 3, 4, 5, 6],
					searchable: false,
				},
				{
					target: [ 7],
					orderable: false,
				},
				{
				target: 2,
				render: function (data, type) {
				let created_at = new Date(data);
				return formatDate(created_at);
				},
				},
				],
				columns: [
				{
					name: "id",
					data: "id",
				},
				{
					name: "name",
					data: "name",
				},
				{
					name: "createdAt",
					data: "createdAt",
				},
				{
					name: "priceBeforeTax",
					data: "priceBeforeTax",
				},
				{
					name: "VAT",
					data: "VAT",
					render: function(data){
            // Insérer ici la logique pour afficher les valeurs de l'objet
					var VATValue = (data.value)*100;
            		return  VATValue + "%"; 
        		},
				},
				{
					name: "priceIncVAT",
					data: "priceIncVAT",
				},
				{
					name: "quantity",
					data: "quantity",
				},
				{
					name: "decrement",
					data: null,
					className: "decrement",
					render: function(data, type, row ) {
						return `<button class="dt-center decrement btn btn-sm btn-secondary">
							<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-dash-lg" viewBox="0 0 16 16">
  								<path fill-rule="evenodd" d="M2 8a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11A.5.5 0 0 1 2 8"/>
							</svg>
						</button>`
					}
				},
				],
				
			});

			datatable.on('click','td.decrement', function(){
				var cell = datatable.cell(this);
				var row = datatable.cell(this).render();
				var id = row["id"];
				datatable.on('preXhr.dt', function (e, settings, data) {
				data.material_id = id;
				});

				cell.data(cell.data()-1).draw();

			});

			datatable.on('xhr', function() {
				var json = datatable.ajax.json();
    			
				if(json.is_send_mess){
					const toast = document.getElementById('liveToast')
					console.log(toast);
					const toastBootstrap = bootstrap.Toast.getOrCreateInstance(toast)
					toastBootstrap.show()
			}
		})
	});
			function update(id){
				 let update = '<a href="/material/update/' + id + '">Modifier</a>';
				 return update
			}
	
			/**
			* Permet de convertir un objet date en chaine de caractère au format local FR
			* @param {Date} date
			* @returns string
			*/
			function formatDate(date) {
			// On ajoute un 0 devant lorsque la valeur de la date est inférieure à 10
			let day = date.getDay() < 10 ? `0${date.getDay()}` : date.getDay();
			// On ajoute un 0 devant lorsque la valeur de la date est inférieure à 10. On ajoute 1 car les mois sont numéro de 0 à 11 en JS
			let month =
				date.getMonth() + 1 < 10 ? `0${date.getMonth() + 1}` : date.getMonth() + 1;
			let year = date.getFullYear();
			return `${day}/${month}/${year}`;
			}
		

		
	</script>
{% endblock %}
